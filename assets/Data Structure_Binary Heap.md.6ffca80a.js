import{_ as a,o as e,c as t,Q as r}from"./chunks/framework.06b9d6ab.js";const m=JSON.parse('{"title":"二叉堆(Binary Heap)","description":"","frontmatter":{},"headers":[],"relativePath":"Data Structure/Binary Heap.md","filePath":"Data Structure/Binary Heap.md","lastUpdated":1687679825000}'),o={name:"Data Structure/Binary Heap.md"},n=r('<h1 id="二叉堆-binary-heap" tabindex="-1">二叉堆(Binary Heap) <a class="header-anchor" href="#二叉堆-binary-heap" aria-label="Permalink to &quot;二叉堆(Binary Heap)&quot;">​</a></h1><h2 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-label="Permalink to &quot;概述&quot;">​</a></h2><p><strong>堆</strong>（Heap）是一棵具有特定性质的二叉树，是满足某类父子节点大小关系的一种完全二叉树。 当根节点保存堆中最大值时，称为大根堆；反之，则称为小根堆。</p><blockquote><p>完全二叉树的定义：完全二叉树的形式是指除了最后一层之外，其他所有层的结点都是满的，而最后一层的所有结点都靠左边。</p></blockquote><p>二叉堆（Binary Heap）是最简单、常用的堆，是一棵符合堆的性质的完全二叉树。 它可以实现以<code>O(log n)</code>插入或删除某个值，以<code>O(1)</code>查询最大（或最小）值。</p>',5),c=[n];function i(p,s,_,d,l,h){return e(),t("div",null,c)}const f=a(o,[["render",i]]);export{m as __pageData,f as default};
